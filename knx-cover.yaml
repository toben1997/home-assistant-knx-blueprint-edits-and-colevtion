blueprint:
  name: KNX - Cover control
  description: |
    Use KNX to control a Home Assistant cover entity with specified group addresses for open, close, stop, and position commands. Optionally invert the position value.
    **Version**: 2024.01.3
  author: kalhimeo
  domain: automation
  input:
    cover_entity:
      name: Cover Entity
      description: Choose the cover to control and expose with KNX
      selector:
        entity:
          domain: cover
    open_close_address:
      name: Open/Close group address
      description: Group address for opening and closing the cover. DPT 1.001
      default: ""
    stop_address:
      name: Stop group address
      description: Group address for stopping the cover. DPT 1.001
      default: ""
    position_address:
      name: Position control group address
      description: Group address for setting the position of the cover. DPT 5.001
      default: ""
    position_state_address:
      name: Position state group address
      description: Group address to send feedback of the cover position. DPT 5.001
      default: ""
    invert_position:
      name: Invert Position
      description: Invert the position value (e.g., 0% becomes 100%)
      default: false
      selector:
        boolean: {}

mode: parallel
max_exceeded: silent

variables:
  cover_entity: !input cover_entity
  open_close_address: !input open_close_address
  stop_address: !input stop_address
  position_address: !input position_address
  position_state_address: !input position_state_address
  invert_position: !input invert_position

trigger:
  - platform: homeassistant
    event: start
    id: "initialize"
  - platform: event
    event_type: automation_reloaded
    id: "initialize"
  - platform: event
    event_type: service_registered
    event_data:
      domain: knx
      service: event_register
    id: "initialize"
  - platform: state
    entity_id: !input cover_entity
    id: "cover_entity"
  - platform: event
    event_type: knx_event
    event_data:
      telegramtype: GroupValueWrite
      direction: Incoming
    id: "knx_event"

action:
  - choose:
    # INITIALIZE
    - conditions:
        - condition: trigger
          id: "initialize"
      sequence:
        - if:
            - condition: template
              value_template: "{{ open_close_address != '' }}"
          then:
            - service: knx.event_register
              data:
                address: "{{ open_close_address }}"
        - if:
            - condition: template
              value_template: "{{ stop_address != '' }}"
          then:
            - service: knx.event_register
              data:
                address: "{{ stop_address }}"
        - if:
            - condition: template
              value_template: "{{ position_address != '' }}"
          then:
            - service: knx.event_register
              data:
                address: "{{ position_address }}"
        - if:
            - condition: template
              value_template: "{{ position_state_address != '' }}"
          then:
            - service: knx.event_register
              data:
                address: "{{ position_state_address }}"

    # KNX TELEGRAMS
    - conditions:
        - condition: template
          value_template: "{{ trigger is defined and trigger.platform == 'event' and trigger.event.event_type == 'knx_event' and trigger.event.data.direction == 'Incoming' and trigger.event.data.destination != '' }}"
      sequence:
        - choose:
          # OPEN/CLOSE
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.destination == open_close_address }}"
            sequence:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ trigger.event.data.data == 1 }}"
                  sequence:
                    - service: cover.open_cover
                      target:
                        entity_id: "{{ cover_entity }}"
                - conditions:
                    - condition: template
                      value_template: "{{ trigger.event.data.data == 0 }}"
                  sequence:
                    - service: cover.close_cover
                      target:
                        entity_id: "{{ cover_entity }}"
          # STOP
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.destination == stop_address }}"
            sequence:
              - service: cover.stop_cover
                target:
                  entity_id: "{{ cover_entity }}"
          # SET POSITION
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.destination == position_address }}"
            sequence:
              - service: cover.set_cover_position
                data:
                  entity_id: "{{ cover_entity }}"
                  position: >
                    {% if invert_position %}
                      {{ 100 - (trigger.event.data.data | int) }}
                    {% else %}
                      {{ trigger.event.data.data }}
                    {% endif %}

    # STATE FEEDBACK
    - conditions:
        - condition: trigger
          id: "cover_entity"
      sequence:
        - choose:
          # POSITION STATE FEEDBACK
          - conditions:
              - condition: template
                value_template: "{{ position_state_address != '' }}"
            sequence:
              - service: knx.send
                data:
                  address: "{{ position_state_address }}"
                  payload: >
                    {% if invert_position %}
                      {{ 100 - (states[cover_entity].attributes.current_position | int) }}
                    {% else %}
                      {{ states[cover_entity].attributes.current_position }}
                    {% endif %}
                  type: 'percent'
