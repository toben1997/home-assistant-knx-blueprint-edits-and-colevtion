blueprint:
  name: KNX - Media Player Power Control
  description: |
    Use KNX to control the power (on/off) of a Home Assistant media player entity with optional state feedback
    **Version**: 2024.01.1
  author: ChatGPT
  source_url: https://example.com
  domain: automation
  input:
    media_player_entity:
      name: Media Player Entity
      description: >
        Choose the media player to control and expose with KNX
      selector:
        entity:
          domain: media_player
    knx_switch_address:
      name: KNX Switch Group Address
      description: >
        Group address for switching the media player on and off. DPT 1.001
        Example: '1/0/1' (leave empty if unused)
      default: ""
    knx_state_address:
      name: KNX State Group Address
      description: >
        Group address to send feedback of the state of the media player. DPT 1.001
        Example: '1/4/1' (leave empty if unused)
      default: ""

mode: parallel
max_exceeded: silent

variables:
  media_player_entity: !input media_player_entity
  knx_switch_address: !input knx_switch_address
  knx_state_address: !input knx_state_address

trigger:
  - platform: homeassistant
    event: start
    id: "initialize"
  - platform: event
    event_type: automation_reloaded
    id: "initialize"
  - platform: event
    event_type: service_registered
    event_data:
      domain: knx
      service: event_register
    id: "initialize"
  - platform: state
    entity_id: !input media_player_entity
    id: "media_player_entity"
  - platform: event
    event_type: knx_event
    event_data:
      destination: !input knx_switch_address
      telegramtype: GroupValueWrite
      direction: Incoming
    id: "knx_switch_address"
  - platform: event
    event_type: knx_event
    event_data:
      destination: !input knx_state_address
      telegramtype: GroupValueRead
      direction: Incoming
    id: "knx_state_address"

action:
  - choose:
    # INITIALIZE
    - conditions:
        - condition: trigger
          id: "initialize"
      sequence:
        # KNX REGISTER
        - if:
            - condition: template
              value_template: "{{ knx_switch_address != '' }}"
          then:
            - service: knx.event_register
              data:
                address: "{{ knx_switch_address }}"
        - if:
            - condition: template
              value_template: "{{ knx_state_address != '' }}"
          then:
            - service: knx.event_register
              data:
                address: "{{ knx_state_address }}"

    # KNX TELEGRAMS
    - conditions:
        condition: template
        value_template: "{{ trigger is defined and trigger.platform == 'event' and trigger.event.event_type == 'knx_event' and trigger.event.data.direction == 'Incoming' and trigger.event.data.destination != '' }}"
      sequence:
        - choose:

          # SWITCH command
          - conditions:
              - condition: trigger
                id: "knx_switch_address"
              - condition: template
                value_template: "{{ knx_switch_address != '' }}"
            sequence:
              - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ trigger.event.data.data | int(default=0) == 0 }}"
                  sequence:
                    - service: media_player.turn_off
                      target:
                        entity_id: "{{ media_player_entity }}"
                - conditions:
                    - condition: template
                      value_template: "{{ trigger.event.data.data | int(default=0) == 1 }}"
                  sequence:
                    - service: media_player.turn_on
                      target:
                        entity_id: "{{ media_player_entity }}"
                        
          # SWITCH read
          - conditions:
              - condition: trigger
                id: "knx_state_address"
              - condition: template
                value_template: "{{ knx_state_address != '' }}"
            sequence:
              - if:
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: !input media_player_entity
                        state: "off"
                      - condition: state
                        entity_id: !input media_player_entity
                        state: "unavailable"
                      - condition: state
                        entity_id: !input media_player_entity
                        state: "unknown"
                then:
                  - service: knx.send
                    data:
                      address: "{{ knx_state_address }}"
                      payload: 0
                      response: true
                else:
                  - service: knx.send
                    data:
                      address: "{{ knx_state_address }}"
                      payload: 1
                      response: true

    # STATE FEEDBACK
    - conditions:
        - condition: trigger
          id: "media_player_entity"
        - condition: template
          value_template: "{{ media_player_entity != '' }}"
      sequence:

        # STATE change
        - if:
            - condition: template
              value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
            - condition: template
              value_template: "{{ knx_state_address != '' }}"
          then:
            - choose :
              - conditions:
                  condition: template
                  value_template: "{{ trigger.to_state.state == 'off' }}"
                sequence:
                  - service: knx.send
                    data:
                      address: "{{ knx_state_address }}"
                      payload: 0
              - conditions:
                  condition: template
                  value_template: "{{ trigger.to_state.state == 'on' }}"
                sequence:
                  - service: knx.send
                    data:
                      address: "{{ knx_state_address }}"
                      payload: 1

        # ALWAYS SEND FEEDBACK ON STATE CHANGE
        - condition: template
          value_template: "{{ knx_state_address != '' }}"
      sequence:
        - choose:
            - conditions:
                condition: template
                value_template: "{{ is_state(media_player_entity, 'off') }}"
              sequence:
                - service: knx.send
                  data:
                    address: "{{ knx_state_address }}"
                    payload: 0
            - conditions:
                condition: template
                value_template: "{{ is_state(media_player_entity, 'on') }}"
              sequence:
                - service: knx.send
                  data:
                    address: "{{ knx_state_address }}"
                    payload: 1
